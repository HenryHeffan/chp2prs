/*************************************************************************
 *
 *  Copyright (c) 2020 Rajit Manohar
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA  02110-1301, USA.
 *
 **************************************************************************
 */
namespace syn {

/* control */
export defchan a1of1 <: chan(bool) (bool r, a) { }

/* variables */  
export template<pint N>
deftype dualrail <: int<1> (bool d[2],t,f)
{
  d[0] = t;
  d[1] = f;
  spec {
    exclhi(t,f)
  }
}

export template<pint N>
deftype dualrails <: int<N> (dualrail r[N]) { }

export deftype sdtvar <: dualrails() { } 
  
export template<pint N>
defchan ax1of2 <: chan(int<N>) (dualrails<N> d; bool a) { }

export template<pint N>
defchan rx1of2 <: chan(int<N>) (bool r; dualrails<N> d) { }

// specify qdi datapath channels
export defchan sdtchan <: ax1of2 () { }
export defchan sdtexprchan <: rx1of2 () { }

export defchan r1of2 <: chan(bool) (bool r, t, f) { }

export template<pint W>
defproc sdt_connect_data(sdtexprchan<W> ex; sdtchan<W> ch)
{
  ex.d = ch.d;
}

export
defproc sdt_connect_r1of2(r1of2 r; sdtexprchan<1> c)
{
  r.r = c.r;
  r.t = c.d.r[0].t;
  r.f = c.d.r[0].f;
}

  
}  
